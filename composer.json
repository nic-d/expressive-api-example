{
    "name": "nic-d/expressive-api-example",
    "type": "project",
    "description": "A little example of how to build fast, small APIs using Expressive and Doctrine!",
    "license": "BSD-3-Clause",
    "require": {
        "php": "^7.2",
        "dasprid/container-interop-doctrine": "^1.1",
        "ramsey/uuid-doctrine": "^1.5",
        "symfony/console": "^4.3",
        "vlucas/phpdotenv": "^3.3",
        "zendframework/zend-component-installer": "^2.1.1",
        "zendframework/zend-config-aggregator": "^1.0",
        "zendframework/zend-diactoros": "^1.7.1 || ^2.0",
        "zendframework/zend-expressive": "^3.0.1",
        "zendframework/zend-expressive-fastroute": "^3.0",
        "zendframework/zend-expressive-hal": "^1.3",
        "zendframework/zend-expressive-helpers": "^5.0",
        "zendframework/zend-filter": "^2.9",
        "zendframework/zend-hydrator": "^3.0",
        "zendframework/zend-inputfilter": "^2.10",
        "zendframework/zend-problem-details": "^1.0",
        "zendframework/zend-servicemanager": "^3.3",
        "zendframework/zend-stdlib": "^3.1",
        "zendframework/zend-validator": "^2.12"
    },
    "require-dev": {
        "filp/whoops": "^2.1.12",
        "phpunit/phpunit": "^7.0.1",
        "roave/security-advisories": "dev-master",
        "squizlabs/php_codesniffer": "^2.9.1",
        "zendframework/zend-expressive-tooling": "^1.0",
        "zfcampus/zf-development-mode": "^3.1"
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "zf": {
            "component-whitelist": [
                "zendframework/zend-expressive",
                "zendframework/zend-expressive-helpers",
                "zendframework/zend-expressive-router",
                "zendframework/zend-httphandlerrunner",
                "zendframework/zend-expressive-fastroute"
            ]
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/App/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "AppTest\\": "test/AppTest/"
        }
    },
    "scripts": {
        "cs-check": "phpcs",
        "cs-fix": "phpcbf",
        "development-disable": "zf-development-mode disable",
        "development-enable": "zf-development-mode enable",
        "development-status": "zf-development-mode status",
        "expressive": "expressive --ansi",
        "serve": "php -S 0.0.0.0:8080 -t public/",
        "test": "phpunit --colors=always",
        "test-coverage": "phpunit --colors=always --coverage-clover clover.xml"
    }
}
